/* tslint:disable */
/* eslint-disable */
/**
 * SNS-Manager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RedditUpvote } from './RedditUpvote';
import {
    RedditUpvoteFromJSON,
    RedditUpvoteFromJSONTyped,
    RedditUpvoteToJSON,
} from './RedditUpvote';

/**
 * 
 * @export
 * @interface RedditUpvoteResponse
 */
export interface RedditUpvoteResponse {
    /**
     * 
     * @type {Array<RedditUpvote>}
     * @memberof RedditUpvoteResponse
     */
    result: Array<RedditUpvote>;
}

/**
 * Check if a given object implements the RedditUpvoteResponse interface.
 */
export function instanceOfRedditUpvoteResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "result" in value;

    return isInstance;
}

export function RedditUpvoteResponseFromJSON(json: any): RedditUpvoteResponse {
    return RedditUpvoteResponseFromJSONTyped(json, false);
}

export function RedditUpvoteResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RedditUpvoteResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'result': ((json['result'] as Array<any>).map(RedditUpvoteFromJSON)),
    };
}

export function RedditUpvoteResponseToJSON(value?: RedditUpvoteResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'result': ((value.result as Array<any>).map(RedditUpvoteToJSON)),
    };
}

