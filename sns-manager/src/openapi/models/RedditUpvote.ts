/* tslint:disable */
/* eslint-disable */
/**
 * SNS-Manager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RedditUpvote
 */
export interface RedditUpvote {
    /**
     * 
     * @type {string}
     * @memberof RedditUpvote
     */
    image: string;
    /**
     * 
     * @type {string}
     * @memberof RedditUpvote
     */
    link: string;
    /**
     * 
     * @type {string}
     * @memberof RedditUpvote
     */
    title: string;
}

/**
 * Check if a given object implements the RedditUpvote interface.
 */
export function instanceOfRedditUpvote(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "image" in value;
    isInstance = isInstance && "link" in value;
    isInstance = isInstance && "title" in value;

    return isInstance;
}

export function RedditUpvoteFromJSON(json: any): RedditUpvote {
    return RedditUpvoteFromJSONTyped(json, false);
}

export function RedditUpvoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): RedditUpvote {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'image': json['image'],
        'link': json['link'],
        'title': json['title'],
    };
}

export function RedditUpvoteToJSON(value?: RedditUpvote | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'image': value.image,
        'link': value.link,
        'title': value.title,
    };
}

